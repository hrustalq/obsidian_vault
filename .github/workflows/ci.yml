name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Docker Compose
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Validate Docker Compose file
      env:
        PUID: 1000
        PGID: 1000
        UMASK: 0022
        TZ: UTC
        COUCHDB_USER: test_user
        COUCHDB_PASSWORD: test_password
      run: docker-compose config
      
    - name: Pull Docker images
      run: docker-compose pull
      
    - name: Test Docker Compose setup
      env:
        PUID: 1000
        PGID: 1000
        UMASK: 0022
        TZ: UTC
        COUCHDB_USER: test_user
        COUCHDB_PASSWORD: test_password
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:5984 || exit 1
        docker-compose logs
        
    - name: Cleanup
      if: always()
      run: docker-compose down -v

  deploy:
    name: Deploy (Production)
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Deploy with Docker Buildx
      env:
        PUID: ${{ secrets.PUID || '99' }}
        PGID: ${{ secrets.PGID || '100' }}
        UMASK: ${{ secrets.UMASK || '0022' }}
        TZ: ${{ secrets.TZ || 'America/New_York' }}
        COUCHDB_USER: ${{ secrets.COUCHDB_USER || 'obsidian_user' }}
        COUCHDB_PASSWORD: ${{ secrets.COUCHDB_PASSWORD }}
      run: |
        if [ -z "$COUCHDB_PASSWORD" ]; then
          echo "‚ö†Ô∏è COUCHDB_PASSWORD secret not set - skipping deployment"
          exit 0
        fi
        echo "üöÄ Deploying with environment variables from GitHub secrets"
        docker-compose up -d
        sleep 30
        curl -f http://localhost:5984 || exit 1
        echo "‚úÖ Deployment successful"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif' 