events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain application/json;
    
    # Upstream CouchDB
    upstream couchdb {
        server couchdb-obsidian-livesync:5984;
    }
    
    # Main server - HTTP only (Cloudflare handles SSL termination)
    server {
        listen 80;
        server_name ${COUCHDB_DOMAIN:-couchdb.yourdomain.com};
        
        # Trust Cloudflare's forwarded headers
        real_ip_header CF-Connecting-IP;
        set_real_ip_from 173.245.48.0/20;
        set_real_ip_from 103.21.244.0/22;
        set_real_ip_from 103.22.200.0/22;
        set_real_ip_from 103.31.4.0/22;
        set_real_ip_from 141.101.64.0/18;
        set_real_ip_from 108.162.192.0/18;
        set_real_ip_from 190.93.240.0/20;
        set_real_ip_from 188.114.96.0/20;
        set_real_ip_from 197.234.240.0/22;
        set_real_ip_from 198.41.128.0/17;
        set_real_ip_from 162.158.0.0/15;
        set_real_ip_from 104.16.0.0/13;
        set_real_ip_from 104.24.0.0/14;
        set_real_ip_from 172.64.0.0/13;
        set_real_ip_from 131.0.72.0/22;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Proxy to CouchDB
        location / {
            proxy_pass http://couchdb;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Always https since Cloudflare handles SSL
            proxy_set_header X-Forwarded-Port 443;
            
            # CouchDB specific settings
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Handle WebSocket connections for real-time sync
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Increase timeouts for large database operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check endpoint
        location /_health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}